version: ~> 1.0
os: linux
dist: bionic
language: python
cache:
  pip: true
  directories:
    - .tox
    - node_modules
jobs:
  include:
    - python: 3.6
      env: PYVER=py36
    - python: 3.7
      env: PYVER=py37
    - python: 3.8
      env: PYVER=py38
    - python: 3.9
      env: PYVER=py39
    # Separate job for tasks which should only run once per build.
    - python: 3.9
      install:
        - pip install poetry tox
        - nvm install
        - npm install --no-optional --no-audit --progress=false
        - poetry install
      script:
        # Python linting.
        - tox -e lint
        # Docs website build.
        - poetry run mkdocs build --strict
        # Package build, incl. publishing an experimental pre-release via GitHub Pages for builds on `master`.
        - cat pyproject.toml| awk '{sub(/^version = .+/,"version = \"0.0.0.dev\"")}1' > pyproject.toml.tmp && mv pyproject.toml.tmp pyproject.toml
        - npm run build
        - poetry build
        - cp -R dist site
      deploy:
        - provider: pages
          skip_cleanup: true
          local_dir: site
          github_token: "$PAGES_GITHUB_API_TOKEN"
          on:
            branch: master
install:
  - pip install poetry tox
script:
  - tox -e $(tox -l | grep ${PYVER} | xargs echo | sed 's/ /,/g')
branches:
  except:
    - gh-pages
notifications:
  email: false
env:
  global:
    # Permissions: public_repo
    # travis encrypt --pro PAGES_GITHUB_API_TOKEN=<value>
    - secure: "X2mgTFLOKwPpWqYMtcPxeGduDrXcKZN9Nwg/90TrzZU07+hNTm5nfd4WZxnBK1B/EZLysetBMMtovVxxtI84mYOMnY+gOTp37AlrY79dldz7nRD5R5ECOvMegQ+cndJ4OAvR2eJm4WsHSBMWsxx4a6NdX/jJI4iAg8CxNdPopO8EsjInHtA8ANmUkJKJyVnnUbe/Un4c713rwnB7nbILiKDqCgkZwhsF34e1Ft7oaJ0XKZg2e/h0DNqseSMwp2HDi/Ti5Y4eQlSYHnPshscxRV21EVlhDqNS0opxgyKd14AFSV3bkxmbD8hzn7VEHSVmkL2PHEd3atIqcGa/VwIw4bZWqTPtHR4YqJeKsnBPLPlQOZy3097rtuRVAPs8OuoOOm7OTss0INRFav8fOY5zq3aZqdywQoLZuDbJOpHz7idZyXwuQKUDxsXKncjoR3XoFhqhLxVUvj6zjXWFSRPc5e/+f17zBIQhr0BQJ/IPIRj3yFdnDGElCpBwJLs5KQM0Ay3NLygvZ4yb4b73m0VgdM/oC0aOw99oElimyllbeSSZzRoPzk3PX/gg45acerGNGbZlDQF363xCjqJB4I7c0GlhQW4vGf+rkpFnFfXZqxDMKVlUmGCpV5QITCqcP2U042eF+/zcxj//F7c4kqyLB8Tz1ktwmQEI/Qi7Y4cMuKE="
